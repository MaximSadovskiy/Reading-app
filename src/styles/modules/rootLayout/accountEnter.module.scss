@use 'utils' as *;

.outerContainer {
    margin-right: pxIntoUnit(20);
    @include breakpointUp(1150) {
        margin-right: pxIntoUnit(80);
    }

    &[data-orientation='mobile'] {
        margin-inline: 0;
        width: 100%;
        overflow: visible;
    }
}

$accInnerContainerWidth: 100;
.innerContainer {
    position: relative;
    width: pxIntoUnit($accInnerContainerWidth);

    &[data-orientation='mobile'] {
        width: 100%;
        overflow: visible;
    }
}

.openBtn {
    @include flex(center, center, pxIntoUnit(10), column);
    @include transition(background-color);

    background-color: var(--acc-bg);
    border: pxIntoUnit(2) solid var(--acc-wrapper-border);
    border-radius: pxIntoUnit(15);
    padding: pxIntoUnit(10);
    cursor: pointer;
    position: relative;

    &:hover, &:focus {
        background-color: var(--acc-bg-hover);
    }

    & > p {
        @include fontDefault;

        color: var(--acc-text);
    }


    // arrow rotating
    // svg on desktop
    &[data-orientation='desktop'] {
        ::after {
            @include transition(transform);
            
            content: url('/arrow.svg');
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            transform-origin: 80% 30%;
            right: 8px;
        }
    }
    
    &[data-open='true'] ::after {
        transform: rotate(90deg);
    }

    // svg on mobile orientation
    &[data-orientation='mobile'] {
        width: 100%;
        border-radius: 0;
        border: none;

        ::after {
            @include transition(transform);
            
            content: url('/arrow.svg');
            position: absolute;
            top: 50%;
            left: 3px;
            transform: rotate(180deg) translateY(6px) translateX(15px);
            transform-origin: 80% 30%;
        }


        &[data-open='true'] ::after {
            transform: rotate(90deg);
        }
    }
};


$accListWidth: 185;
.popupList {
    @include flex(flex-start, center, pxIntoUnit(3), column);
    $leftOffset: calcXOffsetToPositionLargerElement($accListWidth, $accInnerContainerWidth);

    list-style: none;
    z-index: 10;
    background-color: var(--theme-list-bg);
    border-radius: pxIntoUnit(15);
    border: pxIntoUnit(2) solid var(--theme-list-border);
    overflow-x: hidden;

    position: absolute;
    top: pxIntoUnit(95);
    width: pxIntoUnit($accListWidth);

    &[data-orientation='desktop'] {
        left: -#{$leftOffset};
    }

    // Mobile styling
    &[data-orientation='mobile'] {
        clip-path: none;
        position: fixed;
        z-index: 20;
        top: calc(var(--header-height) + 110px);
        right: pxIntoUnit(170);

        @include breakpointUp(500) {
            right: pxIntoUnit(190);
        }
    }
}

.popupListItem {
    width: 100%;
    z-index: 0;

    &:first-of-type {
        @include roundCorners(top, pxIntoUnit(15));
    }

    &:last-of-type {
        @include roundCorners(bottom, pxIntoUnit(15));
    }

    & > a, button {
        @include padding(pxIntoUnit(10), pxIntoUnit(10));
        @include flex(flex-start, center, 20);
        @include transition(background-color);
        @include fontDefault(18);
        
        text-align: left;
        padding-left: pxIntoUnit(18);
        width: 100%;
        height: 100%;
        background-color: var(--theme-btn-bg);
        display: inline-block;
        color: var(--theme-li-color);

        &:hover {
            background-color: var(--theme-btn-bg-hover);
        }

        &[data-first] {
            @include roundCorners(top, pxIntoUnit(15));
        }
    }

    & > button[data-last] {
        @include roundCorners(bottom, pxIntoUnit(15));
    }
}