@use 'utils' as *;

.outerContainer {
    margin-left: auto;
    margin-right: clamp(pxIntoUnit(10), 2.5vw, pxIntoUnit(25));

    // mobile styles
    &[data-orientation='mobile'] {
        margin-right: 0;
        overflow: visible;
    }
}

$themeInnerContainerWidth: 150;
.innerContainer {
    position: relative;
    width: pxIntoUnit($themeInnerContainerWidth);
    
    // mobile styles
    &[data-orientation='mobile'] {
        overflow: visible;
    }
}

.button {
    @include flex(flex-start, center, pxIntoUnit(12));
    @include padding(pxIntoUnit(20), pxIntoUnit(25));
    @include transition(background-color);

    cursor: pointer;
    width: pxIntoUnit($themeInnerContainerWidth);
    height: pxIntoUnit(50);
    background-color: var(--theme-btn-bg);
    border: pxIntoUnit(2) solid var(--theme-btn-border);
    position: relative;
    border-radius: pxIntoUnit(15);

    
    &:hover {
        background-color: var(--theme-btn-bg-hover);
    }
    
    // svg on desktop
    &[data-orientation='desktop'] {
        ::after {
            @include transition(transform);
            
            content: url('/arrow.svg');
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            transform-origin: 80% 30%;
            right: 8px;
        }
    }
    
    &[data-open='true'] ::after {
        transform: rotate(90deg);
    }

    // svg on mobile orientation
    &[data-orientation='mobile'] {
        justify-content: flex-end;
        border-radius: 0;
        border: none;

        ::after {
            @include transition(transform);
            
            content: url('/arrow.svg');
            position: absolute;
            top: 50%;
            left: 3px;
            transform: rotate(180deg) translateY(6px) translateX(15px);
            transform-origin: 80% 30%;
        }


        &[data-open='true'] ::after {
            transform: rotate(90deg);
        }
    }
}

.buttonText {
    @include fontDefault;
    @include transition(color);

    color: var(--theme-btn-text);
}

$themeListWidth: 180;
.list {
    @include flex(flex-start, center, pxIntoUnit(3), column);
    $leftOffset: calcXOffsetToPositionLargerElement($themeListWidth, $themeInnerContainerWidth);

    list-style: none;
    width: pxIntoUnit($themeListWidth);
    z-index: 10;
    background-color: var(--theme-list-bg);
    border-radius: pxIntoUnit(15);
    border: pxIntoUnit(2) solid var(--theme-list-border);
    overflow-x: hidden;

    // desktop position
    position: absolute;
    top: pxIntoUnit(60);
    &[data-orientation='desktop'] {
        left: -#{$leftOffset};
    }

    // Mobile styling
    &[data-orientation='mobile'] {
        clip-path: none;
        position: fixed;
        z-index: 20;
        top: calc(var(--header-height) + 110px);
        right: pxIntoUnit(170);

        @include breakpointUp(500) {
            right: pxIntoUnit(190);
        }
    }
}

.li {
    width: 100%;
    z-index: 0;

    &:first-of-type {
        @include roundCorners(top, pxIntoUnit(15));
    }

    &:last-of-type {
        @include roundCorners(bottom, pxIntoUnit(15));
    }
}

.buttonOption {
    @include padding(pxIntoUnit(10), pxIntoUnit(10));
    @include flex(flex-start, center, 20);
    @include transition(background-color);
    
    width: 100%;
    height: 100%;
    padding-left: pxIntoUnit(10);
    background-color: var(--theme-btn-bg);

    &:hover {
        background-color: var(--theme-btn-bg-hover);
    }

    &[data-first] {
        @include roundCorners(top, pxIntoUnit(15));
    }

    &[data-last] {
        @include roundCorners(bottom, pxIntoUnit(15));
    }

    & img {
        width: pxIntoUnit(25);
        height: pxIntoUnit(25);
    }
}

.optionText {
    @include fontDefault(18);

    display: inline-block;
    margin-inline: pxIntoUnit(10);
    color: var(--theme-li-color);
}